patch stepsequencer_1

func bpm_to_ms($bpm:intn) {

	$ms = (60*1000)/$bpm
	return $ms

}


block clock($lenstepseq:intn, $bpm:intn) {
	

	loadbang > msg(@bpm_to_ms($bpm)) > floatatom > $m = metro.in2
	loadbang>toggle > [$m, $sel0 = sel(0)]

	[loadbang, $sel0] > bang > msg(-1) > $i=int(1)
	$m > bang > $i 

	$i > floatatom >  %8 > +1 > $f=floatatom
	$i.out1 > $one = +1
	$one.out1 > $i.in2

	if $lenstepseq==16:
		$list2 = ['one','two','three','four','five','six','seven','eight','nine','ten','eleven','twelve','thirteen','fourteen','fifteen','sixteen']
	elif $lenstepseq==8:
		$list2 = ['one','two','three','four','five','six','seven','eight']
	end

	for $counter in range $lenstepseq:
		$f > sel($counter+1) > bang > send($list2[$counter])
	end

	#.. @label($elf, 'bpm')


}

block drums ($lenstepseq:intn, $instrument:symbol, $sample:symbol, $hits:list) {

	if $lenstepseq==16:
		$list2 = ['one','two','three','four','five','six','seven','eight','nine','ten','eleven','twelve','thirteen','fourteen','fifteen','sixteen']
	elif $lenstepseq==8:
		$list2 = ['one','two','three','four','five','six','seven','eight']
	end

	$sendto = send($instrument)
	
	
	for $counter in range $lenstepseq:
		receive($list2[$counter]) > bang > $spig+$counter = spigot > bang > $sendto
		if $hits[$counter]==1:
			loadbang >toggle > $spig+$counter.in2
		else:
			toggle > $spig+$counter.in2
		end
		
	end

	.. receive($instrument) > bang > msg('open', $sample) > readsf~ > $vol+$instrument=*~0.5 > $out+$instrument=dac~
	.. $vol+$instrument > $out+$instrument.in2

}

block onoff() {

	loadbang > msg('dsp',1) > s('pd')

}

@onoff()
$len = 8
@clock($len, 160)
@drums($len,'Kick','../samples/kick.wav', [1,0,1,0,1,0,0,0])
@drums($len,'HiHat','../samples/hihat_dnb.wav', [0,0,0,1,0,1,1,1])
@drums($len,'Crash','../samples/hihat_snake.wav', [0,0,0,1,0,0,0,1])

;

