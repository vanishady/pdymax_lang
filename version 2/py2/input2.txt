patch outietwo

func bpm_to_ms($bpm:intn) {

	$ms = (60*1000)/$bpm
	return $ms

}

#func label($nodename:node, $text:symbol) {
#	text($text) > $nodename
#}


block clock($lenstepseq:intn, $bpm:intn) {
	

	loadbang > msg(@bpm_to_ms($bpm)) > floatatom > $m = metro.in2
	toggle > [$m, $sel0 = sel(0)]

	[loadbang, $sel0] > bang > msg(-1) > $i=int(1)
	$m > bang > $i 

	$i > floatatom >  %8 > +1 > $f=floatatom
	$i.out1 > $one = +1
	$one.out1 > $i.in2

	if $lenstepseq==16:
		$list2 = ['one','two','three','four','five','six','seven','eight','nine','ten','eleven','twelve','thirteen','fourteen','fifteen','sixteen']
	elif $lenstepseq==8:
		$list2 = ['one','two','three','four','five','six','seven','eight']
	end

	for $counter in range $lenstepseq:
		$f > sel($counter+1) > bang > send($list2[$counter])
	end

	#.. @label($elf, 'bpm')


}

block drums ($lenstepseq:intn, $instrument:symbol) {

	if $lenstepseq==16:
		$list2 = ['one','two','three','four','five','six','seven','eight','nine','ten','eleven','twelve','thirteen','fourteen','fifteen','sixteen']
	elif $lenstepseq==8:
		$list2 = ['one','two','three','four','five','six','seven','eight']
	end

	$sendto = send($instrument)
	
	for $counter in range $lenstepseq:
		receive($list2[$counter]) > bang > spigot > bang > $sendto
	end

	.. receive($instrument) > bang > msg('open', 'kick.wav', 1) > readsf~ > *~0.5 > dac~
	#.. receive($instrument) > bang > msg('open', $instrument+'.wav,', 1) > readsf~ > *~0.5 > dac~

}

$len = 8
@clock($len, 160)
@drums($len,'Kick')

;

