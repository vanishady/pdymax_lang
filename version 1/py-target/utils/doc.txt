###PATCH

#il nome della patch dà il nome al file
patch nomepatch


###BLOCCHI 

#il blocco è una subpatch di puredata
#tutte le variabili dichiarate nel blocco sono nel suo scope locale
#non è possibile accedere alle variabili di un altro scope mentre si è nel blocco
block nomeblock {
}

#copia il nomeblock1 (nodi e connessioni) nel nomeblock2
recall block nomeblock1 to nomeblock2 {
}


###NODI 

#gli argomenti passati tra parentesi sono symbol o operation
nodename = obj(param1, param2, param3)

#argomenti speciali: specifica degli inlet tramite $1, $2, $3 ...
#specifica degli outlet tramite $-1, $-2, $-3 ...
nodename = obj(param1, $1=anothernodename)

#scorciatoia per i nodi di tipo oggetto
nodename = \objtype(param1, param2, ...)

#dichiarazione senza nome della variabile
#viene assegnato comunque un id implicito
#per l'utente poi non è possibile riferirsi a quel nodo
obj(param1, param2, ...)
floatatom(param1, param2, ...)

#dichiarazione veloce per nodi che specificano operazioni o numeri
#di default questi nodi hanno nodetype obj
nodename = 5
nodename = *5
nodename = *~5


###INLET E OUTLET

#specifica degli inlet($1, $2, $3 ...) o outlet($-1, $-2, $-3 ...)
#in questo caso si instaura una connessione con un nodo già esistente
nodename.$1 = anothernode

#in questo caso si instaura una connessione con un nodo dichiarato al volo
nodename.$1 = \dac(param1, param2, ...)


###CONNESSIONI

#le connessioni sono arbitrariamente lunghe
#il modo standard per effettuare connessioni è
nodename :: anothernode

#connessione con dichiarazione al volo
nodename :: m=8

#connessioni multiple
<nodename1, nodename2>::nodename3
floatatom()::<nodename1, nodename2, node3=obj(param, ...)>::nodename4


###COSTRUTTI IF-ELIF-ELSE, FOR

#funzionano nel modo più basilare
#la test condition è un'operazione aritmetica o di confronto

