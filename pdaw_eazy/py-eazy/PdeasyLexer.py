# Generated from Pdeasy.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,46,344,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,1,
        0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,
        8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,14,
        1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,
        1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,24,
        1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,
        1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,
        1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,
        1,30,1,30,1,30,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,34,
        1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,
        1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,3,38,254,8,38,1,39,1,39,5,39,258,8,39,10,39,12,39,261,9,39,
        1,39,4,39,264,8,39,11,39,12,39,265,1,39,3,39,269,8,39,3,39,271,8,
        39,1,40,1,40,5,40,275,8,40,10,40,12,40,278,9,40,1,40,1,40,1,41,1,
        41,3,41,284,8,41,1,42,3,42,287,8,42,1,42,1,42,5,42,291,8,42,10,42,
        12,42,294,9,42,1,42,4,42,297,8,42,11,42,12,42,298,3,42,301,8,42,
        1,43,3,43,304,8,43,1,43,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,
        1,47,1,47,3,47,317,8,47,1,48,1,48,1,48,3,48,322,8,48,1,49,1,49,1,
        49,3,49,327,8,49,1,50,4,50,330,8,50,11,50,12,50,331,1,50,1,50,1,
        51,1,51,5,51,338,8,51,10,51,12,51,341,9,51,1,51,1,51,0,0,52,1,1,
        3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
        29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,
        51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,
        73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,0,91,0,93,0,95,
        0,97,0,99,0,101,45,103,46,1,0,6,2,0,65,90,97,122,1,0,48,57,1,0,49,
        57,4,0,44,44,46,47,92,92,95,95,3,0,9,10,13,13,32,32,2,0,10,10,13,
        13,359,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
        0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,
        0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
        0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,
        0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,
        0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
        0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,
        0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,101,1,0,
        0,0,0,103,1,0,0,0,1,105,1,0,0,0,3,107,1,0,0,0,5,109,1,0,0,0,7,111,
        1,0,0,0,9,113,1,0,0,0,11,115,1,0,0,0,13,117,1,0,0,0,15,119,1,0,0,
        0,17,121,1,0,0,0,19,123,1,0,0,0,21,125,1,0,0,0,23,127,1,0,0,0,25,
        129,1,0,0,0,27,131,1,0,0,0,29,134,1,0,0,0,31,137,1,0,0,0,33,139,
        1,0,0,0,35,141,1,0,0,0,37,144,1,0,0,0,39,147,1,0,0,0,41,149,1,0,
        0,0,43,152,1,0,0,0,45,155,1,0,0,0,47,158,1,0,0,0,49,160,1,0,0,0,
        51,163,1,0,0,0,53,172,1,0,0,0,55,178,1,0,0,0,57,185,1,0,0,0,59,190,
        1,0,0,0,61,196,1,0,0,0,63,203,1,0,0,0,65,205,1,0,0,0,67,209,1,0,
        0,0,69,212,1,0,0,0,71,217,1,0,0,0,73,222,1,0,0,0,75,226,1,0,0,0,
        77,253,1,0,0,0,79,270,1,0,0,0,81,272,1,0,0,0,83,283,1,0,0,0,85,300,
        1,0,0,0,87,303,1,0,0,0,89,308,1,0,0,0,91,310,1,0,0,0,93,312,1,0,
        0,0,95,316,1,0,0,0,97,321,1,0,0,0,99,326,1,0,0,0,101,329,1,0,0,0,
        103,335,1,0,0,0,105,106,5,59,0,0,106,2,1,0,0,0,107,108,5,123,0,0,
        108,4,1,0,0,0,109,110,5,125,0,0,110,6,1,0,0,0,111,112,5,64,0,0,112,
        8,1,0,0,0,113,114,5,61,0,0,114,10,1,0,0,0,115,116,5,91,0,0,116,12,
        1,0,0,0,117,118,5,44,0,0,118,14,1,0,0,0,119,120,5,93,0,0,120,16,
        1,0,0,0,121,122,5,58,0,0,122,18,1,0,0,0,123,124,5,40,0,0,124,20,
        1,0,0,0,125,126,5,41,0,0,126,22,1,0,0,0,127,128,5,42,0,0,128,24,
        1,0,0,0,129,130,5,47,0,0,130,26,1,0,0,0,131,132,5,42,0,0,132,133,
        5,126,0,0,133,28,1,0,0,0,134,135,5,47,0,0,135,136,5,126,0,0,136,
        30,1,0,0,0,137,138,5,43,0,0,138,32,1,0,0,0,139,140,5,45,0,0,140,
        34,1,0,0,0,141,142,5,43,0,0,142,143,5,126,0,0,143,36,1,0,0,0,144,
        145,5,45,0,0,145,146,5,126,0,0,146,38,1,0,0,0,147,148,5,37,0,0,148,
        40,1,0,0,0,149,150,5,61,0,0,150,151,5,61,0,0,151,42,1,0,0,0,152,
        153,5,33,0,0,153,154,5,61,0,0,154,44,1,0,0,0,155,156,5,62,0,0,156,
        157,5,61,0,0,157,46,1,0,0,0,158,159,5,60,0,0,159,48,1,0,0,0,160,
        161,5,60,0,0,161,162,5,61,0,0,162,50,1,0,0,0,163,164,5,105,0,0,164,
        165,5,110,0,0,165,166,5,32,0,0,166,167,5,114,0,0,167,168,5,97,0,
        0,168,169,5,110,0,0,169,170,5,103,0,0,170,171,5,101,0,0,171,52,1,
        0,0,0,172,173,5,112,0,0,173,174,5,97,0,0,174,175,5,116,0,0,175,176,
        5,99,0,0,176,177,5,104,0,0,177,54,1,0,0,0,178,179,5,105,0,0,179,
        180,5,109,0,0,180,181,5,112,0,0,181,182,5,111,0,0,182,183,5,114,
        0,0,183,184,5,116,0,0,184,56,1,0,0,0,185,186,5,102,0,0,186,187,5,
        117,0,0,187,188,5,110,0,0,188,189,5,99,0,0,189,58,1,0,0,0,190,191,
        5,98,0,0,191,192,5,108,0,0,192,193,5,111,0,0,193,194,5,99,0,0,194,
        195,5,107,0,0,195,60,1,0,0,0,196,197,5,114,0,0,197,198,5,101,0,0,
        198,199,5,116,0,0,199,200,5,117,0,0,200,201,5,114,0,0,201,202,5,
        110,0,0,202,62,1,0,0,0,203,204,5,62,0,0,204,64,1,0,0,0,205,206,5,
        101,0,0,206,207,5,110,0,0,207,208,5,100,0,0,208,66,1,0,0,0,209,210,
        5,105,0,0,210,211,5,102,0,0,211,68,1,0,0,0,212,213,5,101,0,0,213,
        214,5,108,0,0,214,215,5,105,0,0,215,216,5,102,0,0,216,70,1,0,0,0,
        217,218,5,101,0,0,218,219,5,108,0,0,219,220,5,115,0,0,220,221,5,
        101,0,0,221,72,1,0,0,0,222,223,5,102,0,0,223,224,5,111,0,0,224,225,
        5,114,0,0,225,74,1,0,0,0,226,227,5,97,0,0,227,228,5,115,0,0,228,
        76,1,0,0,0,229,230,5,105,0,0,230,231,5,110,0,0,231,232,5,116,0,0,
        232,254,5,110,0,0,233,234,5,102,0,0,234,235,5,108,0,0,235,236,5,
        111,0,0,236,237,5,97,0,0,237,238,5,116,0,0,238,254,5,110,0,0,239,
        240,5,115,0,0,240,241,5,121,0,0,241,242,5,109,0,0,242,243,5,98,0,
        0,243,244,5,111,0,0,244,254,5,108,0,0,245,246,5,108,0,0,246,247,
        5,105,0,0,247,248,5,115,0,0,248,254,5,116,0,0,249,250,5,110,0,0,
        250,251,5,111,0,0,251,252,5,100,0,0,252,254,5,101,0,0,253,229,1,
        0,0,0,253,233,1,0,0,0,253,239,1,0,0,0,253,245,1,0,0,0,253,249,1,
        0,0,0,254,78,1,0,0,0,255,259,3,95,47,0,256,258,3,97,48,0,257,256,
        1,0,0,0,258,261,1,0,0,0,259,257,1,0,0,0,259,260,1,0,0,0,260,271,
        1,0,0,0,261,259,1,0,0,0,262,264,3,89,44,0,263,262,1,0,0,0,264,265,
        1,0,0,0,265,263,1,0,0,0,265,266,1,0,0,0,266,268,1,0,0,0,267,269,
        5,126,0,0,268,267,1,0,0,0,268,269,1,0,0,0,269,271,1,0,0,0,270,255,
        1,0,0,0,270,263,1,0,0,0,271,80,1,0,0,0,272,276,5,39,0,0,273,275,
        3,99,49,0,274,273,1,0,0,0,275,278,1,0,0,0,276,274,1,0,0,0,276,277,
        1,0,0,0,277,279,1,0,0,0,278,276,1,0,0,0,279,280,5,39,0,0,280,82,
        1,0,0,0,281,284,3,85,42,0,282,284,3,87,43,0,283,281,1,0,0,0,283,
        282,1,0,0,0,284,84,1,0,0,0,285,287,5,45,0,0,286,285,1,0,0,0,286,
        287,1,0,0,0,287,288,1,0,0,0,288,292,3,93,46,0,289,291,3,91,45,0,
        290,289,1,0,0,0,291,294,1,0,0,0,292,290,1,0,0,0,292,293,1,0,0,0,
        293,301,1,0,0,0,294,292,1,0,0,0,295,297,5,48,0,0,296,295,1,0,0,0,
        297,298,1,0,0,0,298,296,1,0,0,0,298,299,1,0,0,0,299,301,1,0,0,0,
        300,286,1,0,0,0,300,296,1,0,0,0,301,86,1,0,0,0,302,304,3,85,42,0,
        303,302,1,0,0,0,303,304,1,0,0,0,304,305,1,0,0,0,305,306,5,46,0,0,
        306,307,3,85,42,0,307,88,1,0,0,0,308,309,7,0,0,0,309,90,1,0,0,0,
        310,311,7,1,0,0,311,92,1,0,0,0,312,313,7,2,0,0,313,94,1,0,0,0,314,
        317,5,95,0,0,315,317,3,89,44,0,316,314,1,0,0,0,316,315,1,0,0,0,317,
        96,1,0,0,0,318,322,3,89,44,0,319,322,3,91,45,0,320,322,5,95,0,0,
        321,318,1,0,0,0,321,319,1,0,0,0,321,320,1,0,0,0,322,98,1,0,0,0,323,
        327,3,89,44,0,324,327,3,91,45,0,325,327,7,3,0,0,326,323,1,0,0,0,
        326,324,1,0,0,0,326,325,1,0,0,0,327,100,1,0,0,0,328,330,7,4,0,0,
        329,328,1,0,0,0,330,331,1,0,0,0,331,329,1,0,0,0,331,332,1,0,0,0,
        332,333,1,0,0,0,333,334,6,50,0,0,334,102,1,0,0,0,335,339,5,35,0,
        0,336,338,8,5,0,0,337,336,1,0,0,0,338,341,1,0,0,0,339,337,1,0,0,
        0,339,340,1,0,0,0,340,342,1,0,0,0,341,339,1,0,0,0,342,343,6,51,0,
        0,343,104,1,0,0,0,18,0,253,259,265,268,270,276,283,286,292,298,300,
        303,316,321,326,331,339,1,6,0,0
    ]

class PdeasyLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    PATCH = 27
    IMPORT = 28
    FUNC = 29
    BLOCK = 30
    RETURN = 31
    CONNECT = 32
    END = 33
    IF = 34
    ELIF = 35
    ELSE = 36
    FOR = 37
    AS = 38
    VARTYPE = 39
    NAME = 40
    SYMBOL = 41
    NUMBER = 42
    INTEGER = 43
    FLOAT = 44
    WS = 45
    COMMENT = 46

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'{'", "'}'", "'@'", "'='", "'['", "','", "']'", "':'", 
            "'('", "')'", "'*'", "'/'", "'*~'", "'/~'", "'+'", "'-'", "'+~'", 
            "'-~'", "'%'", "'=='", "'!='", "'>='", "'<'", "'<='", "'in range'", 
            "'patch'", "'import'", "'func'", "'block'", "'return'", "'>'", 
            "'end'", "'if'", "'elif'", "'else'", "'for'", "'as'" ]

    symbolicNames = [ "<INVALID>",
            "PATCH", "IMPORT", "FUNC", "BLOCK", "RETURN", "CONNECT", "END", 
            "IF", "ELIF", "ELSE", "FOR", "AS", "VARTYPE", "NAME", "SYMBOL", 
            "NUMBER", "INTEGER", "FLOAT", "WS", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "PATCH", "IMPORT", "FUNC", "BLOCK", "RETURN", "CONNECT", 
                  "END", "IF", "ELIF", "ELSE", "FOR", "AS", "VARTYPE", "NAME", 
                  "SYMBOL", "NUMBER", "INTEGER", "FLOAT", "LETTER", "DIGIT", 
                  "NON_ZERO_DIGIT", "ID_START", "ID_CONTINUE", "SYMBOL_ADMITTED", 
                  "WS", "COMMENT" ]

    grammarFileName = "Pdeasy.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


