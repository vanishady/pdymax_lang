patch mysynth

func stoca ($zzo: intn) {
	$a = $zzo*5
	return $a
}

block additivesynth ($freq: intn, $armonics: list, $volumes: list) {
	inlet() > msg($freq) > $freq_node := num()
	$freq_node > osc~() > $finalvol := *~ (0) > outlet~()

	for $i in range @len($armonics):
		$freq_node > * ($armonics[$i]) > num() > osc~() > * ($volumes[$i]) > $finalvol
	end

	$b = @stoca(10)


}

block adsr ($attack:intn, $decay:intn, $sus_lev: floatn, $sustain: intn, $release:intn) {
	$bucket := line~()
	inlet() > msg(1, 1000) > $bucket
	inlet() > delay(1000) > bang() > [$mess := msg(0.5, 1500), $del := delay(3000)]
	$del > msg(0, 1000) > $bucket
	$mess > $bucket > outlet~()
}

@additivesynth(440, [3,5,7], [0.75, 0.55, 0.35]) as $synth
@adsr(1000, 1500, 0.5, 1500, 1000) as $myadsr
@adsr(1000, 1500, 0.5, 1500, 1000) as $myadsr1

bang() > [$synth, 1:$myadsr, 2:$myadsr]

#attach things
#@ampmod(*$synth, *$myadsr)  #this synth follows this envelope

;
