import pdawlib
patch mysynth

func notes_to_freq ($notes: list) {
	$freqs = []
	for $i in range @len($notes):
		if $notes[$i] == 'A':
			@append($freqs, 440)
		elif $notes[$i] == 'B':
			@append($freqs, 778)
		[...]
	end
	return $freqs
}

func attacher ($block_1: pointer, $block_2: pointer) {
	return $block1 *~ $block2 -> output~()
}

block additivesynth ($freq: int, $armonics: list, $volumes: list) {
	inlet() > msg($freq) > $freq_node = num()
	$freq_node > osc~() > $finalvol = *~ 0.25 > outlet~()

	for $i in range @len($armonics):
		$freq_node > * $armonics[$i] > num() > osc~() > * $volumes[$i] > $finalvol
	end
}

block adsr ($attack:intn, $decay:intn, $sus_lev: floatn, $sustain: intn, $release:intn) {
	$bucket = line~
	inlet() > msg(1, 1000) > $bucket
	inlet() > delay(1000) > bang() > [$mess = msg(0.5, 1500), $del = delay(3000)]
	$del > msg(0, 1000) > $bucket
	$mess > $bucket > outlet~()
}

$melody = [D E G A E A G E D C]
@additivesynth(440, [3,5,7], [0.75, 0.55, 0.35]) as $synth
@adsr(1000, 1500, 0.5, 1500, 1000) as $myadsr

#bang > [$synth, $myadsr.in1, $myadsr.in2]

#attach effects
@attacher($synth, $myadsr)  #this synth follows this envelope
@attacher($melody, $synth) #play this melody with this synth


------- requisiti --------
- importare la libreria standard (con blocchi @drums, @melody ecc. e funzioni)
- riferirsi a blocchi gi√† dichiarati (per poter ad esempio mettere effetti sul blocco)
- all'interno dei blocchi: dichiarare e connettere nodi