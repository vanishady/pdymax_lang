import pdawlib

patch myfirst

func bpm_to_ms($bpm:int) {

	$ms = (60*1000)/$bpm
	return $ms

}

func label($nodename:node, $text:symbol) {

	text($text) > $nodename

}

block clock($lenstepseq:int, $bpm:int) {
	

	inlet > msg(@bpm_to_ms($bpm))> floatatom > $m = metro.2
	bang > [$m, $sel0 = sel(0)]

	#connessione: node > node
	#connessione multipla: [node, node, ...] > node
	#connessione con decl: id=node > node > [id=node, id=node, node]
	#connessione con reference: id > [id, id] > node
	#le variabili devono avere nome che inizia per $
	#id=node oppure id=lista 
	#connessione all'inlet 2: node > node.2
	#connessione dall'outlet 2: node.2 > node

	[loadbang, $sel0] > bang > msg(-1) > $i=int(1)
	$m > $i  
	
	$i > floatatom >  %8 > +1 > $f=floatatom

	#for: for id in range num
	#list of integers, symbols and nodes allowed

	if $lenstepseq==16:
		$list2 = ['one', 'two', ... 'eight', ... 'sixteen']
	elif $lenstepseq==8:
		$list2 = ['one', 'two', ... , 'eight']

	for i in range $lenstepseq:
		$f > sel(i) > bang > send($list2[i])

	#return loadbang > $m=msg($bpm) > self, @label($m, 'bpm')
	

}

block onoff() {

	dsp > msg('pd',1)

}

__________________________________________

import pdawlib

patch myproj

@clock(8, 160)
@clock(16, 160)
